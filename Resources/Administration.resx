<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoView" xml:space="preserve">
    <value>No Views</value>
  </data>
  <data name="SubjectCreate" xml:space="preserve">
    <value>Create Subject</value>
  </data>
  <data name="SubjectDetails" xml:space="preserve">
    <value>Subjkect Details</value>
  </data>
  <data name="SubjectEdit" xml:space="preserve">
    <value>Edit Subject</value>
  </data>
  <data name="SubjectName" xml:space="preserve">
    <value>Subject Name</value>
  </data>
  <data name="SubjectNew" xml:space="preserve">
    <value>New Subject</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="SubjectTitle" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Sponsor" xml:space="preserve">
    <value>Sponsor</value>
  </data>
  <data name="SponsorCreate" xml:space="preserve">
    <value>Create Sponsor</value>
  </data>
  <data name="SponsorDetails" xml:space="preserve">
    <value>Sponsor Details</value>
  </data>
  <data name="SponsorEdit" xml:space="preserve">
    <value>Edit Sponsor</value>
  </data>
  <data name="SponsorImage" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="SponsorName" xml:space="preserve">
    <value>Sponsor Name</value>
  </data>
  <data name="SponsorNew" xml:space="preserve">
    <value>New Sponsor</value>
  </data>
  <data name="SponsorShortcut" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="PublishPeriod" xml:space="preserve">
    <value>Publish Period</value>
  </data>
  <data name="PublishPeriodCreate" xml:space="preserve">
    <value>Create Publish Period</value>
  </data>
  <data name="PublishPeriodDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="PublishPeriodDetails" xml:space="preserve">
    <value>Publish Period Details</value>
  </data>
  <data name="PublishPeriodEdit" xml:space="preserve">
    <value>Edit Publish Period</value>
  </data>
  <data name="PublishPeriodNew" xml:space="preserve">
    <value>New Publish Period</value>
  </data>
  <data name="ScopeDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Scope" xml:space="preserve">
    <value>Scope</value>
  </data>
  <data name="ScopeCreate" xml:space="preserve">
    <value>Create Scope</value>
  </data>
  <data name="ScopeDetails" xml:space="preserve">
    <value>Scope Details</value>
  </data>
  <data name="ScopeEdit" xml:space="preserve">
    <value>Edit Scope</value>
  </data>
  <data name="ScopeNew" xml:space="preserve">
    <value>New Scope</value>
  </data>
  <data name="Journal" xml:space="preserve">
    <value>Journal</value>
  </data>
  <data name="JournalName" xml:space="preserve">
    <value>Journal Name</value>
  </data>
  <data name="PublishPeriodName" xml:space="preserve">
    <value>Publish Period Name</value>
  </data>
  <data name="ImpactFactor" xml:space="preserve">
    <value>Impact Factor</value>
  </data>
  <data name="JournalDetails" xml:space="preserve">
    <value>Journal Details</value>
  </data>
  <data name="OnlineISSN" xml:space="preserve">
    <value>Online ISSN</value>
  </data>
  <data name="PrintISSN" xml:space="preserve">
    <value>Print ISSN</value>
  </data>
  <data name="YearIssue" xml:space="preserve">
    <value>Year Issue</value>
  </data>
  <data name="CreateJournal" xml:space="preserve">
    <value>Create Journal</value>
  </data>
  <data name="NewJournal" xml:space="preserve">
    <value>New Journal</value>
  </data>
  <data name="ShortcutCharacter" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AimsScope" xml:space="preserve">
    <value>AimsScope</value>
  </data>
  <data name="ArticleProcessingCharge" xml:space="preserve">
    <value>Article Processing Charge</value>
  </data>
  <data name="AuthorGuidlines" xml:space="preserve">
    <value>Author Guidlines</value>
  </data>
  <data name="ConderencePublication" xml:space="preserve">
    <value>Conderence Publication</value>
  </data>
  <data name="EditJournal" xml:space="preserve">
    <value>Edit Journal</value>
  </data>
  <data name="EditorialBoard" xml:space="preserve">
    <value>Editorial Board</value>
  </data>
  <data name="IssueDate" xml:space="preserve">
    <value>Issue Date</value>
  </data>
  <data name="IssueName" xml:space="preserve">
    <value>Issue Name</value>
  </data>
  <data name="IssueNumber" xml:space="preserve">
    <value>Issue Number</value>
  </data>
  <data name="JournalVersion" xml:space="preserve">
    <value>Journal Version</value>
  </data>
  <data name="JournalVolume" xml:space="preserve">
    <value>Journal Volume</value>
  </data>
  <data name="JournalVolumeType" xml:space="preserve">
    <value>Journal Volume Type</value>
  </data>
  <data name="OpenSpecialIssues" xml:space="preserve">
    <value>Open Special Issues</value>
  </data>
  <data name="PublicationEthics" xml:space="preserve">
    <value>Publication Ethics</value>
  </data>
  <data name="ReviewersAcknowledgment" xml:space="preserve">
    <value>Reviewers Acknowledgment</value>
  </data>
  <data name="SpecialIssuesGuidlines" xml:space="preserve">
    <value>Special Issues Guidlines</value>
  </data>
  <data name="VersionNumber" xml:space="preserve">
    <value>Version Number</value>
  </data>
  <data name="CreateJournalVersion" xml:space="preserve">
    <value>Create Journal Version</value>
  </data>
  <data name="EditJournalVersion" xml:space="preserve">
    <value>Edit Journal Version</value>
  </data>
  <data name="NewJournalVersion" xml:space="preserve">
    <value>New Journal Version</value>
  </data>
  <data name="EditNews" xml:space="preserve">
    <value>Edit News</value>
  </data>
  <data name="JournalVersionDetails" xml:space="preserve">
    <value>Journal Version Details</value>
  </data>
  <data name="JournalVolumeTypeName" xml:space="preserve">
    <value>Journal Volume</value>
  </data>
  <data name="NewsDetails" xml:space="preserve">
    <value>News Details</value>
  </data>
  <data name="NewsTitle" xml:space="preserve">
    <value>News Title</value>
  </data>
  <data name="CreateNews" xml:space="preserve">
    <value>Create News</value>
  </data>
  <data name="NewNews" xml:space="preserve">
    <value>New News</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ConferenceDetails" xml:space="preserve">
    <value>Conference Details</value>
  </data>
  <data name="ConferenceName" xml:space="preserve">
    <value>Conference Name</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="CreateConference" xml:space="preserve">
    <value>Create Conference</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="NewConference" xml:space="preserve">
    <value>New Conference</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="EditConference" xml:space="preserve">
    <value>Edit Conference</value>
  </data>
  <data name="Conference" xml:space="preserve">
    <value>Conference</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="PublishedArticle" xml:space="preserve">
    <value>Published Article</value>
  </data>
  <data name="ArticleType" xml:space="preserve">
    <value>Article Type</value>
  </data>
  <data name="ArticleTitle" xml:space="preserve">
    <value>Article Title</value>
  </data>
  <data name="AcceptDate" xml:space="preserve">
    <value>Accept Date</value>
  </data>
  <data name="ArticleContent" xml:space="preserve">
    <value>Article Content</value>
  </data>
  <data name="CreatePublishedArticle" xml:space="preserve">
    <value>Create Published Article</value>
  </data>
  <data name="FromPage" xml:space="preserve">
    <value>From Page</value>
  </data>
  <data name="NewPublishedArticle" xml:space="preserve">
    <value>New Published Article</value>
  </data>
  <data name="RecievedDate" xml:space="preserve">
    <value>Recieved Date</value>
  </data>
  <data name="ToPage" xml:space="preserve">
    <value>To Page</value>
  </data>
  <data name="PublishDate" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="Abstract" xml:space="preserve">
    <value>Abstract</value>
  </data>
  <data name="Corresponding" xml:space="preserve">
    <value>Corresponding</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
</root>